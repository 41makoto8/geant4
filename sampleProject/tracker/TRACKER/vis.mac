# Use this open statement to create an OpenGL view:
/vis/open OGL 600x600-0+0
#
# Disable auto refresh and quieten vis messages whilst scene and
# trajectories are established:
/vis/viewer/set/autoRefresh false
/vis/verbose errors
#
# Draw geometry:
/vis/drawVolume
#
# Specify view angle:
/vis/viewer/set/viewpointVector -1 0 0
/vis/viewer/set/lightsVector -1 0 0
#
# Specify style (surface, wireframe, auxiliary edges,...)
/vis/viewer/set/style wireframe
/vis/viewer/set/auxiliaryEdge true
/vis/viewer/set/lineSegmentsPerCircle 100
#
# Draw smooth trajectories at end of event, showing trajectory points
/vis/scene/add/trajectories smooth
/vis/modeling/trajectories/create/drawByCharge
/vis/modeling/trajectories/drawByCharge-0/default/setDrawStepPts true
/vis/modeling/trajectories/drawByCharge-0/default/setStepPtsSize 5
#
# To superimpose all of the events from a given run:
/vis/scene/endOfEventAction accumulate
#
# Name
/vis/set/textColour white
/vis/set/textLayout right
#
# Axes, scale, etc.
# /vis/scene/add/axes
/vis/scene/add/eventID
/vis/scene/add/date
#
# To get nice view
/vis/geometry/set/visibility World 0 true
/vis/viewer/set/style wireframe
/vis/viewer/set/hiddenMarker true
/vis/viewer/set/viewpointThetaPhi 70 70
#
/vis/geometry/set/colour Target 0.90 0.71 0.13 0.6
/vis/geometry/set/colour Detector 0.84 0.78 0.73 0.6
#
# Re-establish auto refreshing and verbosity:
/vis/viewer/set/autoRefresh true
/vis/verbose warnings
